package com.rssoft.restapi.services;import com.rssoft.restapi.dao.CourseDao;import com.rssoft.restapi.entities.Course;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;import java.util.Optional;@Servicepublic class CourseServiceImpl implements CourseService{    @Autowired    private CourseDao courseDao;//    List<Course> list; HardCoded data add in constructer    CourseServiceImpl() {//        list = new ArrayList<>();//        list.add(new Course(101 , "Java" , 50000));//        list.add(new Course(102 , "Angular" , 30000));    }    @Override    public List<Course> getAllCourse() {        return courseDao.findAll();    }    @Override    public Course getCourseById(int courseId) {//        Course c = null ;////        for (Course course : list){//            if (course.getId() == courseId){//                c = course;//                break;//            }//        }        return courseDao.findById(courseId)                .orElseThrow(() -> new RuntimeException("Course not found with id: " + courseId));    }    @Override    public Course addCourse(Course course) {//        list.add(course);        courseDao.save(course);        return course;    }    @Override    public Course UpdateCourse(Course course) {//        list.forEach(e -> {//            if (e.getId() == course.getId()){//                e.setCourseName(course.getCourseName());//                e.setPrice(course.getPrice());//            }//        });        courseDao.save(course);        return course;    }    @Override    public void deleteCourse(int parseLong) {        Course entity = courseDao.getOne(parseLong);        courseDao.delete(entity);//        courseDao.getReferenceById(parseLong);    }}